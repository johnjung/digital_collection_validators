#!/usr/bin/env python3
"""Usage:
   fix_mvol_numbered_filenames <identifier> <directory>

   Rename files in mvol's ALTO, JPEG, POS and TIFF directories. The script
   renames files to an intermediate filename, composed of a timestamp in
   milliseconds, before correctly renumbering them to avoid collisions.
"""
import os, owncloud, re, sys, time
from docopt import docopt

def batch_rename_mvol(oc, directory):
    """Rename files in a directory (e.g. ALTO, JPEG, TIFF, etc.)
    according to a pattern. 

    Args:
    oc: an owncloud object.
    directory (str): e.g. 'IIIF_Files/mvol/0001/0002/0003/ALTO/'
    pattern_fun: a pattern function. 
    """

    extensions = {
        'ALTO': 'xml',
        'JPEG': 'jpg',
        'POS': 'pos',
        'TIFF': 'tif'
    }

    assert len(directory.split('/')) == 8

    mvol_str = '-'.join(directory.split('/')[2:6])

    extension = extensions[directory.split('/')[-2]]

    ms_time = str(int(round(time.time() * 1000)))

    try:
        source_names = [f.name for f in oc.list(directory)]
    except owncloud.owncloud.HTTPResponseError:
        sys.stderr.write('{} does not exist.\n'.format(options['<directory>']))
        sys.exit()

    intermediate_names = ['{}_{}'.format(ms_time, p) for p in source_names]

    target_names = []
    for i in range(len(source_names)):
        target_names.append(
            '{}_{}.{}'.format(
                mvol_str, 
                str(i+1).zfill(4), 
                extension
            )
        )

    if set(source_names) == set(target_names):
        return

    if set(source_names).intersection(set(intermediate_names)):
        raise RuntimeError

    for i in range(len(source_names)):
        oc.move(directory + source_names[i], directory + intermediate_names[i])
        i = i + 1

    if set(intermediate_names).intersection(set(target_names)):
        raise RuntimeError

    for i in range(len(intermediate_names)):
        oc.move(directory + intermediate_names[i], directory + target_names[i])
        i = i + 1

if __name__=='__main__':
    options = docopt(__doc__)

    assert options['<identifier>'].startswith('mvol-')

    oc = owncloud.Client(os.environ['OWNCLOUD_WEBDAV_SERVER'])
    oc.login(os.environ['OWNCLOUD_WEBDAV_USERNAME'], os.environ['OWNCLOUD_WEBDAV_PASSWORD'])

    directory = 'IIIF_Files/{}/{}/'.format(
        options['<identifier>'].replace('-', '/'), 
        options['<directory>']
    )

    if not options['<directory>'] in ('ALTO', 'JPEG', 'POS', 'TIFF'):
        sys.stderr.write('<directory> must be one of: ALTO, JPEG, POS, TIFF\n')
        sys.exit()

    try:
        batch_rename_mvol(oc, directory)
    except RuntimeError:
        sys.stderr.write('Could not rename {} {}.\n'.format(
            options['<identifier>'],
            options['<directory>']
        )
        sys.exit()
